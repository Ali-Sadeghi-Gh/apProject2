package client.GUI.messenger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import client.GUI.MainFrame;
import client.Client;
import shared.model.PanelName;
import shared.model.message.Chat;
import shared.model.users.UserRole;
import shared.util.Config;

import javax.swing.*;
import java.awt.*;
import java.io.*;
import java.util.ArrayList;

/**
 * @author HP
 */
public class MessengerPanel extends javax.swing.JPanel {
  MainFrame mainFrame;
  Client client;
  UserRole userRole;
  String contactId;
  int messagesCount = 0;

  /**
   * Creates new form MessengerPanel
   */
  public MessengerPanel(MainFrame mainFrame, Client client, UserRole userRole) {
    this.client = client;
    this.mainFrame = mainFrame;
    this.userRole = userRole;
    setBounds(getConfig().getProperty(Integer.class, "panelX"), getConfig().getProperty(Integer.class, "panelY"),
            getConfig().getProperty(Integer.class, "panelWidth"), getConfig().getProperty(Integer.class, "panelHeight"));
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">
  private void initComponents() {

    createChatButton = new javax.swing.JButton();
    chatsPane = new javax.swing.JScrollPane();
    messagesPane = new javax.swing.JScrollPane();
    textField = new javax.swing.JTextField();
    contactNameLabel = new javax.swing.JLabel();
    sendTextButton = new javax.swing.JButton();
    sendFileButton = new javax.swing.JButton();
    imgLabel = new javax.swing.JLabel();

    textField.setFont(new java.awt.Font("Tahoma", Font.PLAIN, 20)); // NOI18N

    createChatButton.setText(getConfig().getProperty(String.class, "createChatButtonText"));
    createChatButton.addActionListener(this::createChatButtonActionPerformed);

    contactNameLabel.setFont(new java.awt.Font("Tahoma", Font.PLAIN, 20)); // NOI18N
    contactNameLabel.setHorizontalAlignment(SwingConstants.CENTER);

    sendTextButton.setText(getConfig().getProperty(String.class, "sendTextButtonText"));
    sendTextButton.addActionListener(this::sendTextButtonActionPerformed);
    sendTextButton.setVisible(false);

    sendFileButton.setText(getConfig().getProperty(String.class, "sendFileButtonText"));
    sendFileButton.addActionListener(this::sendFileButtonActionPerformed);
    sendFileButton.setVisible(false);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addContainerGap(78, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                            .addComponent(textField, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(sendFileButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(sendTextButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addComponent(messagesPane)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(contactNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGap(18, 18, 18)
                                            .addComponent(imgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(27, 27, 27)
                            .addComponent(chatsPane, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(32, 32, 32))
                    .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(createChatButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(createChatButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(contactNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(imgLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(messagesPane, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(textField)
                                                    .addGroup(layout.createSequentialGroup()
                                                            .addComponent(sendTextButton)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(sendFileButton))))
                                    .addComponent(chatsPane, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(54, 54, 54))
    );
  }// </editor-fold>

  private void createChatButtonActionPerformed(java.awt.event.ActionEvent evt) {
    client.changePanel(PanelName.CREATE_CHAT_PANEL, userRole);
  }

  private void sendTextButtonActionPerformed(java.awt.event.ActionEvent evt) {
    if (!textField.getText().equals("")) {
      client.messengerSendText(textField.getText(), String.valueOf(contactId));
      textField.setText("");
    }
  }

  private void sendFileButtonActionPerformed(java.awt.event.ActionEvent evt) {
    JFileChooser fileChooser = new JFileChooser(getConfig().getProperty(String.class, "fileChooserOpenDefaultDir"));
    int response = fileChooser.showOpenDialog(null);
    if (response == JFileChooser.APPROVE_OPTION) {
      File file = new File(fileChooser.getSelectedFile().getAbsolutePath());
      String fileName = file.getName();
      FileInputStream fileInputStream = null;
      try {
        fileInputStream = new FileInputStream(file);
      } catch (FileNotFoundException e) {
        e.printStackTrace();
      }
      byte[] bytes = new byte[(int) file.length()];
      try {
        int result;
        do {
          assert fileInputStream != null;
          result = fileInputStream.read(bytes);
        } while (result != -1);
        fileInputStream.close();
      } catch (IOException e) {
        e.printStackTrace();
      }
      client.messengerSendFile(bytes, fileName, contactId);
    }
  }

  public int getChatsScrollValue() {
    return chatsPane.getVerticalScrollBar().getValue();
  }

  public int getMessagesScrollValue() {
    return messagesPane.getVerticalScrollBar().getValue();
  }

  public void update(ArrayList<Chat> chats, Chat chat, int chatsScrollValue, int messagesScrollValue) {
    if (chats != null) {
      chatsPane.setViewportView(new ChatsPanel(chats, this));
      chatsPane.getVerticalScrollBar().setValue(chatsScrollValue);
    }

    if (chat != null) {
      contactId = chat.getContactId();
      sendTextButton.setVisible(true);
      sendFileButton.setVisible(true);
      contactNameLabel.setText(chat.getContactName());
      File file = new File(String.format(getConfig().getProperty(String.class, "imgFilePath"), chat.getContactId()));
      Image image = new ImageIcon(String.format(getConfig().getProperty(String.class, "imgFilePath"),
              file.exists() ? chat.getContactId() : "default")).getImage()
              .getScaledInstance(66, 66, Image.SCALE_DEFAULT);
      imgLabel.setIcon(new ImageIcon(image));

      if (chat.getMessages() != null && chat.getMessages().size() > messagesCount) {
        messagesCount = chat.getMessages().size();
        messagesPane.setViewportView(new MessagesPanel(chat.getMessages()));
        messagesPane.getVerticalScrollBar().setValue(messagesScrollValue);
      }
    }
  }

  public void updateMessenger(String contactId) {
    client.changeToMessengerPanel(userRole, contactId);
  }

  private Config getConfig() {
    return Config.getConfig(Config.getMainConfig().getProperty(String.class, "messengerConfig"));
  }

  // Variables declaration - do not modify
  private javax.swing.JScrollPane chatsPane;
  private javax.swing.JLabel contactNameLabel;
  private javax.swing.JButton createChatButton;
  private javax.swing.JScrollPane messagesPane;
  private javax.swing.JButton sendFileButton;
  private javax.swing.JButton sendTextButton;
  private javax.swing.JTextField textField;
  private javax.swing.JLabel imgLabel;
  // End of variables declaration
}
