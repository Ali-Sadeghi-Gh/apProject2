package client.GUI;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import client.Client;
import shared.model.users.UserRole;
import shared.util.Config;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

/**
 *
 * @author HP
 */
public class NotificationPanel extends javax.swing.JPanel {
  Client client;

  /**
   * Creates new form NotificationPanel
   */
  public NotificationPanel(Client client) {
    this.client = client;
    setBounds(getConfig().getProperty(Integer.class, "panelX"), getConfig().getProperty(Integer.class, "panelY"),
            getConfig().getProperty(Integer.class, "panelWidth"), getConfig().getProperty(Integer.class, "panelHeight"));
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">
  private void initComponents() {

    jScrollPane1 = new javax.swing.JScrollPane();
    jScrollPane2 = new javax.swing.JScrollPane();
    requestsLabel = new javax.swing.JLabel();
    answersLabel = new javax.swing.JLabel();
    answersTable = new javax.swing.JTable();
    requestsTable = new javax.swing.JTable();

    requestsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
    ));
    requestsTable.setCellSelectionEnabled(true);
    requestsTable.setModel(new DefaultTableModel() {
      @Override
      public boolean isCellEditable(int row, int column) {
        return false;
      }
    });
    jScrollPane2.setViewportView(requestsTable);

    requestsTable.addMouseListener(new MouseAdapter() {
      public void mouseClicked(MouseEvent e) {
        JTable jTable = (JTable) e.getSource();
        if (jTable.getSelectedRow() < 0) {
          return;
        }
        String userId = (String) requestsTable.getModel().getValueAt(jTable.getSelectedRow(), 0);
        String type = (String) requestsTable.getModel().getValueAt(jTable.getSelectedRow(), 2);
        String answer = (String) requestsTable.getModel().getValueAt(jTable.getSelectedRow(), jTable.getSelectedColumn());
        client.answerRequestNotification(userId, type, answer);
      }
    });

    requestsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
    ));
    answersTable.setCellSelectionEnabled(true);
    answersTable.setModel(new DefaultTableModel() {
      @Override
      public boolean isCellEditable(int row, int column) {
        return false;
      }
    });
    jScrollPane1.setViewportView(answersTable);

    requestsLabel.setFont(new java.awt.Font("Tahoma", Font.PLAIN, 20)); // NOI18N
    requestsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    requestsLabel.setText(getConfig().getProperty(String.class, "requestsLabelText"));

    answersLabel.setFont(new java.awt.Font("Tahoma", Font.PLAIN, 20)); // NOI18N
    answersLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    answersLabel.setText(getConfig().getProperty(String.class, "answersLabelText"));

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                            .addGap(80, 80, 80)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(85, 85, 85)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap(67, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(209, 209, 209)
                            .addComponent(answersLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(requestsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(211, 211, 211))
    );
    layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addContainerGap(78, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(requestsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(answersLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(31, 31, 31)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(73, 73, 73))
    );
  }// </editor-fold>

  private void showAnswersData(String[][] data) {
    String[] cols = {"id", "name", "type", "status"};
    DefaultTableModel model = (DefaultTableModel) answersTable.getModel();
    model.setDataVector(data, cols);
    answersTable.setModel(model);
  }

  private void showRequestsData(String[][] data) {
    String[] cols = {"id", "name", "type", "accept", "reject"};
    DefaultTableModel model = (DefaultTableModel) requestsTable.getModel();
    model.setDataVector(data, cols);
    requestsTable.setModel(model);
  }

  public void update(String[][] answersData, String[][] requestsData) {
    showAnswersData(answersData);
    showRequestsData(requestsData);
  }

  private Config getConfig() {
    return Config.getConfig(Config.getMainConfig().getProperty(String.class, "GUIConfig"));
  }

  // Variables declaration - do not modify
  private javax.swing.JLabel answersLabel;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JLabel requestsLabel;
  private javax.swing.JTable requestsTable;
  private javax.swing.JTable answersTable;
  // End of variables declaration
}
