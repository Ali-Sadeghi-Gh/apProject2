package GUI.professors;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import GUI.MainFrame;
import client.Client;
import shared.model.PanelName;
import shared.model.users.UserRole;

import javax.swing.table.DefaultTableModel;
import java.awt.*;

/**
 *
 * @author HP
 */
public class ProfessorTemporaryScoreList extends javax.swing.JPanel {
  MainFrame mainFrame;
  Client client;
  UserRole userRole;
  String courseId;

  /**
   * Creates new form ProfessorTemporaryScoreList
   */
  public ProfessorTemporaryScoreList(MainFrame mainFrame, Client client, UserRole userRole) {
    this.client = client;
    this.mainFrame = mainFrame;
    this.userRole = userRole;
    setBounds(200, 270, 1100, 700);
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">
  private void initComponents() {

    backButton = new javax.swing.JButton();
    nameLabel = new javax.swing.JLabel();
    idLabel = new javax.swing.JLabel();
    facultyLabel = new javax.swing.JLabel();
    creditLabel = new javax.swing.JLabel();
    gradeLabel = new javax.swing.JLabel();
    jScrollPane1 = new javax.swing.JScrollPane();
    studentTable = new javax.swing.JTable();
    temporaryButton = new javax.swing.JButton();
    finalButton = new javax.swing.JButton();

    backButton.setText("back");
    backButton.addActionListener(this::backButtonActionPerformed);

    nameLabel.setFont(new java.awt.Font("Tahoma", Font.PLAIN, 18)); // NOI18N
    nameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

    idLabel.setFont(new java.awt.Font("Tahoma", Font.PLAIN, 18)); // NOI18N
    idLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

    facultyLabel.setFont(new java.awt.Font("Tahoma", Font.PLAIN, 18)); // NOI18N
    facultyLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

    creditLabel.setFont(new java.awt.Font("Tahoma", Font.PLAIN, 18)); // NOI18N
    creditLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

    gradeLabel.setFont(new java.awt.Font("Tahoma", Font.PLAIN, 18)); // NOI18N
    gradeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

    studentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
    ));
    jScrollPane1.setViewportView(studentTable);
    studentTable.setModel(new DefaultTableModel() {
      @Override
      public boolean isCellEditable(int row, int column) {
        return column == 5 || column == 6;
      }
    });

    temporaryButton.setText("temporary submit");
    temporaryButton.addActionListener(this::temporaryButtonActionPerformed);

    finalButton.setText("final submit");
    finalButton.addActionListener(this::finalButtonActionPerformed);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                            .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(finalButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(nameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(facultyLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(creditLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(gradeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(idLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(temporaryButton, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE))
                                            .addGap(856, 856, 856))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addContainerGap(284, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 801, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addContainerGap()))
    );
    layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(42, 42, 42)
                            .addComponent(idLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                            .addGap(38, 38, 38)
                            .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(43, 43, 43)
                            .addComponent(facultyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(40, 40, 40)
                            .addComponent(creditLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(43, 43, 43)
                            .addComponent(gradeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(38, 38, 38)
                            .addComponent(temporaryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(finalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(82, 82, 82))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 647, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addContainerGap(37, Short.MAX_VALUE)))
    );
  }// </editor-fold>

  private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {
    client.changePanel(PanelName.ProfessorsCourseList, userRole);
  }

  private void temporaryButtonActionPerformed(java.awt.event.ActionEvent evt) {
    for (int i = 0; i < studentTable.getModel().getRowCount(); i++) {
      if (studentTable.getModel().getValueAt(i, 6) == null ||
              studentTable.getModel().getValueAt(i, 6).toString().equals("")) {
        mainFrame.showMessage("input all scores");
        return;
      }
    }
    for (int i = 0; i < studentTable.getModel().getRowCount(); i++) {
      try {
        Double.parseDouble(studentTable.getModel().getValueAt(i, 6).toString());
      } catch (Exception e) {
        mainFrame.showMessage("scores must be numbers");
        return;
      }
    }
    for (int i = 0; i < studentTable.getModel().getRowCount(); i++) {
      double score = Double.parseDouble(studentTable.getModel().getValueAt(i, 6).toString());
      if (score < 0 || score > 20) {
        mainFrame.showMessage("scores must be between 0 and 20");
        return;
      }
    }

    for (int i = 0; i < studentTable.getModel().getRowCount(); i++) {
      client.addTemporaryScoreByProfessor(userRole, studentTable.getModel().getValueAt(i, 0).toString(),
              courseId, null, studentTable.getModel().getValueAt(i, 5)==null
                      ? "" : studentTable.getModel().getValueAt(i, 5).toString(), studentTable.getModel()
                      .getValueAt(i, 6)==null ? "" : studentTable.getModel().getValueAt(i, 6).toString());
    }
  }

  private void finalButtonActionPerformed(java.awt.event.ActionEvent evt) {
    client.addScore(userRole, courseId, studentTable.getModel().getRowCount());
  }

  private void showData(String[][] data) {
    DefaultTableModel model = (DefaultTableModel) studentTable.getModel();
    String[] cols = {"id", "name", "faculty", "grade", "objection", "answer", "score"};
    model.setDataVector(data, cols);
  }

  public void update(String[][] data, String courseName, String courseId, String faculty, String credit, String grade) {
    showData(data);
    nameLabel.setText("name: " + courseName);
    idLabel.setText("id: " + courseId);
    facultyLabel.setText("faculty: " + faculty);
    creditLabel.setText("credit: " + credit);
    gradeLabel.setText("grade: " + grade);
    this.courseId = courseId;
  }

  // Variables declaration - do not modify
  private javax.swing.JButton backButton;
  private javax.swing.JLabel creditLabel;
  private javax.swing.JLabel facultyLabel;
  private javax.swing.JButton finalButton;
  private javax.swing.JLabel gradeLabel;
  private javax.swing.JLabel idLabel;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JLabel nameLabel;
  private javax.swing.JTable studentTable;
  private javax.swing.JButton temporaryButton;
  // End of variables declaration
}
