package GUI.professors;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import GUI.MainFrame;
import client.Client;
import shared.model.users.UserRole;

import javax.swing.*;
import java.awt.*;

/**
 *
 * @author HP
 */
public class AnswerRecommendationPanel extends javax.swing.JPanel {
  MainFrame mainFrame;
  Client client;
  UserRole userRole;

  /**
   * Creates new form AnswerRecommendationPanel
   */
  public AnswerRecommendationPanel(MainFrame mainFrame, Client client, UserRole userRole) {
    this.client = client;
    this.mainFrame = mainFrame;
    this.userRole = userRole;
    setBounds(200, 270, 1100, 700);
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">
  private void initComponents() {

    rejectButton = new javax.swing.JButton();
    requestLabel = new javax.swing.JLabel();
    idField = new javax.swing.JTextField();
    acceptButton = new javax.swing.JButton();
    backButton = new javax.swing.JButton();

    rejectButton.setFont(new java.awt.Font("Tahoma", Font.PLAIN, 20)); // NOI18N
    rejectButton.setText("reject");
    rejectButton.addActionListener(this::rejectButtonActionPerformed);

    requestLabel.setFont(new java.awt.Font("Tahoma", Font.PLAIN, 18)); // NOI18N
    requestLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    requestLabel.setText("request id:");

    idField.setFont(new java.awt.Font("Tahoma", Font.PLAIN, 18)); // NOI18N
    idField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

    acceptButton.setFont(new java.awt.Font("Tahoma", Font.PLAIN, 20)); // NOI18N
    acceptButton.setText("accept");
    acceptButton.addActionListener(this::acceptButtonActionPerformed);

    backButton.setText("back");
    backButton.addActionListener(this::backButtonActionPerformed);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addContainerGap(398, Short.MAX_VALUE)
                            .addComponent(acceptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(rejectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(342, 342, 342))
                    .addGroup(layout.createSequentialGroup()
                            .addGap(62, 62, 62)
                            .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                    .addGap(270, 270, 270)
                                    .addComponent(requestLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(60, 60, 60)
                                    .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addContainerGap(487, Short.MAX_VALUE)))
    );
    layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(45, 45, 45)
                            .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 327, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(rejectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(acceptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(235, 235, 235))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                    .addGap(290, 290, 290)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(requestLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addContainerGap(366, Short.MAX_VALUE)))
    );
  }// </editor-fold>

  private void rejectButtonActionPerformed(java.awt.event.ActionEvent evt) {
    answerRequest(false);
  }

  private void acceptButtonActionPerformed(java.awt.event.ActionEvent evt) {
    answerRequest(true);
  }

  private void answerRequest(boolean accepted) {
    try {
      Integer.parseInt(idField.getText());
    } catch (Exception e) {
      JOptionPane.showMessageDialog(mainFrame, "request id must be a number");
      return;
    }

//    EducationalRequest educationalRequest = Controller.getInstance().findRequestById(Integer.parseInt(idField.getText()));
//    if (educationalRequest != null && educationalRequest.getType().equals(EducationalRequest.Type.recommendation) && educationalRequest.getProfessorId()
//            .equals(String.valueOf(professor.getId())) && !educationalRequest.isFinished()) {
//      Controller.getInstance().answerRecommendation(educationalRequest, accepted);
//      JOptionPane.showMessageDialog(mainFrame, "answer submitted");
//      idField.setText("");
//    } else {
//      JOptionPane.showMessageDialog(mainFrame, "request not found");
//    }
  }

  private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {
//    if (professor.getPosition().equals(Professor.Position.eduAssistant)) {
////   todo   mainFrame.setContentPane(new EduAssistantPanel(mainFrame, professor, new RecommendationListPanel(mainFrame, professor)));
//    }  else {
//      mainFrame.setContentPane(new ProfessorPanel(mainFrame, new RecommendationListPanel(mainFrame, professor), client));
//    }
//    mainFrame.repaintFrame();
  }


  // Variables declaration - do not modify
  private javax.swing.JButton acceptButton;
  private javax.swing.JButton backButton;
  private javax.swing.JTextField idField;
  private javax.swing.JButton rejectButton;
  private javax.swing.JLabel requestLabel;
  // End of variables declaration
}
