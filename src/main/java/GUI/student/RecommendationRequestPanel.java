package GUI.student;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import GUI.MainFrame;
import client.Client;
import shared.model.EducationalRequest;
import shared.model.users.Student;

import javax.swing.*;

/**
 * @author HP
 */
public class RecommendationRequestPanel extends javax.swing.JPanel {
  MainFrame mainFrame;
  Client client;
  Student student;

  /**
   * Creates new form RecommendationRequestPanel
   */
  public RecommendationRequestPanel(MainFrame mainFrame, Student student) {
    this.student = student;
    this.mainFrame = mainFrame;
    setBounds(200, 270, 1100, 700);
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">
  private void initComponents() {

    requestButton = new javax.swing.JButton();
    professorLabel = new javax.swing.JLabel();
    idField = new javax.swing.JTextField();
    jScrollPane1 = new javax.swing.JScrollPane();
    resultArea = new javax.swing.JTextArea();

    requestButton.setText("request recommendation");
    requestButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        requestButtonActionPerformed(evt);
      }
    });

    professorLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    professorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    professorLabel.setText("professor id:");

    idField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    idField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

    resultArea.setColumns(20);
    resultArea.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    resultArea.setLineWrap(true);
    resultArea.setRows(4);
    resultArea.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
    resultArea.setEditable(false);
    resultArea.setWrapStyleWord(true);
    jScrollPane1.setViewportView(resultArea);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                            .addGap(272, 272, 272)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                            .addGap(219, 219, 219)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                            .addComponent(professorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addGap(60, 60, 60)
                                                            .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(requestButton, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addContainerGap(321, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                            .addGap(237, 237, 237)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(professorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(24, 24, 24)
                            .addComponent(requestButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(61, 61, 61)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap(189, Short.MAX_VALUE))
    );
  }// </editor-fold>

  private void requestButtonActionPerformed(java.awt.event.ActionEvent evt) {
    try {
      Integer.parseInt(idField.getText());
    } catch (Exception e) {
      JOptionPane.showMessageDialog(mainFrame, "professor id must be a number");
      idField.setText("");
      resultArea.setText("");
      return;
    }

//    Professor professor = Controller.getInstance().findProfessorById(Integer.parseInt(idField.getText()));
//    if (professor == null) {
//      JOptionPane.showMessageDialog(mainFrame, "professor id not found");
//      idField.setText("");
//      resultArea.setText("");
//      return;
//    }

//    EducationalRequest educationalRequest = Controller.getInstance().findRequestByProfessor(student, professor, EducationalRequest.Type.recommendation);
//    if (educationalRequest == null) {
//      educationalRequest = Controller.getInstance().addRequest(String.valueOf(student.getId()), String.valueOf(professor.getId()),
//              null, null, EducationalRequest.Type.recommendation);
//      JOptionPane.showMessageDialog(mainFrame, "your request submitted");
//    } else {
//      JOptionPane.showMessageDialog(mainFrame, "you request recommendation before");
//    }
//    resultArea.setText(educationalRequest.getResult());
    idField.setText("");
  }


  // Variables declaration - do not modify
  private javax.swing.JTextField idField;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JLabel professorLabel;
  private javax.swing.JButton requestButton;
  private javax.swing.JTextArea resultArea;
  // End of variables declaration
}
