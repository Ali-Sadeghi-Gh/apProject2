package GUI.student;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import GUI.MainFrame;
import LOGIC.Controller;
import client.Client;
import shared.model.EducationalRequest;
import shared.model.users.Student;

import javax.swing.*;

/**
 *
 * @author HP
 */
public class MinorRequestPanel extends javax.swing.JPanel {
  MainFrame mainFrame;
  Client client;
  Student student;
  EducationalRequest educationalRequest;

  /**
   * Creates new form MinorRequestPanel
   */
  public MinorRequestPanel(MainFrame mainFrame, Student student) {
    this.student = student;
    this.mainFrame = mainFrame;
    educationalRequest = Controller.getInstance().findRequestByFaculty(student, student.getFacultyName(), EducationalRequest.Type.minor);
    setBounds(200, 270, 1100, 700);
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">
  private void initComponents() {

    facultyLabel = new javax.swing.JLabel();
    facultyBox = new javax.swing.JComboBox<>();
    requestButton = new javax.swing.JButton();
    resultLabel = new javax.swing.JLabel();

    facultyLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    facultyLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    facultyLabel.setText("target faculty:");

    facultyBox.setMaximumRowCount(10);
    if (educationalRequest == null) {
      String[] allFaculties = Controller.getInstance().getFacultiesName();
      String[] facultyName = new String[allFaculties.length-2];
      int counter = 0;
      for (int i = 1; i < allFaculties.length; i++) {
        if (!allFaculties[i].equals(student.getFacultyName())) {
          facultyName[counter] = allFaculties[i];
          counter++;
        }
      }
      facultyBox.setModel(new javax.swing.DefaultComboBoxModel<>(facultyName));
    } else {
      facultyBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{educationalRequest.getTargetFaculty()}));
    }

    requestButton.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
    requestButton.setText("minor dropout");
    requestButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        requestButtonActionPerformed(evt);
      }
    });

    resultLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    resultLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    resultLabel.setText((educationalRequest ==null || educationalRequest.getResult()==null) ? "" : educationalRequest.getResult());

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                            .addGap(325, 325, 325)
                            .addComponent(facultyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(facultyBox, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addContainerGap(352, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(requestButton, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(273, 273, 273))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(resultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(320, 320, 320))))
    );
    layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                            .addGap(245, 245, 245)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(facultyBox, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(facultyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(27, 27, 27)
                            .addComponent(requestButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(65, 65, 65)
                            .addComponent(resultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap(172, Short.MAX_VALUE))
    );
  }// </editor-fold>

  private void requestButtonActionPerformed(java.awt.event.ActionEvent evt) {
    if (educationalRequest == null) {
//      if (Controller.getInstance().getPassCredit(student) < 0) {
//        JOptionPane.showMessageDialog(mainFrame, "you must have at least 8 passed credits");
//      }
//      if (Controller.getInstance().getAverageScoreByStudent(student) < 1) {
//        JOptionPane.showMessageDialog(mainFrame, "your average score must be above 18");
//        return;
//      }

      Controller.getInstance().addRequest(String.valueOf(student.getId()), null, student.getFacultyName(),
              facultyBox.getSelectedItem().toString(), EducationalRequest.Type.minor);

      JOptionPane.showMessageDialog(mainFrame, "your request submitted");
//   todo   mainFrame.setContentPane(new StudentPanel(mainFrame, student, new MinorRequestPanel(mainFrame, student)));
      mainFrame.repaintFrame();
    } else {
      JOptionPane.showMessageDialog(mainFrame, "you can't request more than once");
    }
  }

  // Variables declaration - do not modify
  private javax.swing.JButton requestButton;
  private javax.swing.JComboBox<String> facultyBox;
  private javax.swing.JLabel facultyLabel;
  private javax.swing.JLabel resultLabel;
  // End of variables declaration
}
